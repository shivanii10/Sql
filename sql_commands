select job, avg(sal) from emp group by job having avg(sal) in
-> (select avg(sal) from emp group by job);

select job, min(avg(sal)) from emp group by job having avg(sal) in (select avg(sal) from job group by job);


--------------------------------------------------------------------------------------------------------------

mysql> select avg(sal) from emp group by job;
+-----------+
| avg(sal)  |
+-----------+
| 1037.5000 |
| 1400.0000 |
| 2758.3333 |
| 3000.0000 |
| 5000.0000 |
+-----------+

mysql> select job,avg(sal) from emp group by job  having avg(sal) in (select avg(sal) from emp group by job);
+-----------+-----------+
| job       | avg(sal)  |
+-----------+-----------+
| CLERK     | 1037.5000 |
| SALESMAN  | 1400.0000 |
| ANALYST   | 3000.0000 |
| PRESIDENT | 5000.0000 |
+-----------+-----------+

mysql> select job, avg(sal) from emp group by job;
+-----------+-----------+
| job       | avg(sal)  |
+-----------+-----------+
| CLERK     | 1037.5000 |
| SALESMAN  | 1400.0000 |
| MANAGER   | 2758.3333 |
| ANALYST   | 3000.0000 |
| PRESIDENT | 5000.0000 |
+-----------+-----------+

mysql> select job, avg(sal) from emp group by job having avg(sal) in (select avg(sal) from emp group by job) order by avg(sal);
+-----------+-----------+
| job       | avg(sal)  |
+-----------+-----------+
| CLERK     | 1037.5000 |
| SALESMAN  | 1400.0000 |
| ANALYST   | 3000.0000 |
| PRESIDENT | 5000.0000 |
+-----------+-----------+

mysql> select job, avg(sal) from emp group by job having avg(sal) in (select avg(sal) from emp group by job) order by avg(sal) limit 1;
+-------+-----------+
| job   | avg(sal)  |
+-------+-----------+
| CLERK | 1037.5000 |
+-------+-----------+

-------------------------------------------------------------------------------------------------------------------------------------------------------------------

select cm.firstname,am.account_number from customer_master cm join account_master am on am.customer_number=cm.customer_number where day(am.account_opening_date)>'15';

1.Write a query to display customer number, customer's first name, account number where the
account status is terminated. Display the records sorted in ascending order based on customer
number and then by account number.

select cm.firstname,am.account_number,cm.customer_number from customer_master cm 
join
account_master am on am.customer_number=cm.customer_number 
where am.account_status='terminated';



2.Write a query to display the number of customers who have registration but no account in the
bank. Give the alias name as Count_Customer for number of customers.

select count(*) Count_customer from customer_master where customer_number NOT IN (select customer_number from account_master); 



3.Write a query to display the total number of withdrawals and total number of deposits being done
by customer whose customer number ends with 001. The query should display transaction type and
the number of transactions. Give an alias name as Trans_Count for number of transactions. Display
the records sorted in ascending order based on transaction type.


select count(*) Trans_Count , tm.transaction_type from transaction_details tm 
join
account_master am on am.account_number=tm.account_number 
where am.customer_number like "%001" group by tm.transaction_type order by tm.transaction_type ;


4.Write a query to display the firstname of the customers who have more than 1 account. Display the
records in sorted order based on firstname.

select count(cm.customer_number),cm.firstname,cm.customer_number from customer_master cm 
join 
account_master am on am.customer_number=cm.customer_number 
group by cm.customer_number 
having count(cm.customer_number)>1 order by cm.firstname;
